
  発注建設                       Standard Sand of Pennsylvania Co.

  クライアント: 束縛変数教
  オブジェクト: UM-32 "Universal Machine"
  -----------------------------------------------------------------
                                                     19106年7月21日

  物理仕様
  --------

  マシンは次のようなコンポーネントによって構成されます:

    * 砂岩プラッタの無限供給。砂岩プラッタは「ビット」と呼ばれ
      る32個の小さなマークから成ります。

                               最少価値のビット
                                              |
                                              v
              .--------------------------------.
              |VUTSRQPONMLKJIHGFEDCBA9876543210|
              `--------------------------------'
               ^
               |
               最大価値のビット

              図 0. プラッタ
      
      各ビットはそれぞれ0ビットもしくは1ビットです。"unsigned
      32-bit numbers"（特許 #4,294,967,295 を参照）システムを使う
      ことで、プラッタの上のマーキングは数値に成り得ます。

    * 8つの区別される多目的レジスタがあり、それぞれひとつのプラッタ
      を保持することができる。

    * プラッタの配列のコレクションがあり、それぞれ区別される
      32-bit の識別子によって参照される。
    * A collection of arrays of platters, each referenced by a distinct
      32-bit identifier. One distinguished array is referenced by 0
      and stores the "program." This array will be referred to as the
      '0' array.

    * 「ASCII文字セット」（特許 #127 参照）の象形文字を表示可能かつ
      「unsigned 8-bit characters」（特許 #255 参照）による入力、
      出力の可能な 1x1 文字解像度コンソール。
  

  挙動
  ----

  マシンは「プログラム」スクロールから読み込まれたコンテンツを
  持つ '0' 配列によって初期化されます。レジスタはすべて '0' の
  値のプラッタによって初期化されます。実行指（†execution finer）
  は '0' 配列のオフセット0、すなわち最初のプラッタを指しています。

  レガシーな "unsigned 8-bit character" スクロールからプログラムが
  渡されると、A,B,C,Dの組み合わせのバイトが、'A'なら最大格、'D'なら
  最少格、'B'と'C'はそれぞれ中大格、中少格として解釈されます。

  一度初期化されてしまうと、マシンはスピンサイクルに入ります。
  Unversal Machineにおいては、各サイクルは実行指の指すプラッタから
  「オペレータ」を受け取ります。以下のセクションでは、そこで
  受け取ることになるであろうオペレータを記述します。この
  オペレータが解釈されないと、実行指は必要に応じて次のプラッタへ
  動作を移します。

  オペレータ
  ----------

  Unversal Machineには14のオペレータがあります。オペレータの
  ナンバーは通達されたプラッタの最大価値4ビットにより規定されます。

              .--------------------------------.
              |VUTSRQPONMLKJIHGFEDCBA9876543210|
              `--------------------------------'
               ^^^^
               |
               オペレータのナンバー

              図 1. オペレータの概要


  標準オペレータ
  --------------

  各標準オペレータは、A,B,Cの3つのレジスタを使うことで動作を
  可能にします。各レジスタは通達されたプラッタの3ビット
  によって規定されます。レジスタCは最少価値の3ビット、レジスタ
  Bは次に価値の少ない3ビット、レジスタAは次に価値の少ない3ビット
  です。

                                      A     C
                                      |     |
                                      vvv   vvv                    
              .--------------------------------.
              |VUTSRQPONMLKJIHGFEDCBA9876543210|
              `--------------------------------'
               ^^^^                      ^^^
               |                         |
               オペレータのナンバー      B

              図 2. 標準オペレータ


  各ベーシックオペレータの概要は以下の通りです。

  オペレータ #0. Conditional Move.

                  レジスタCが0でなければ
                  レジスタAはレジスタBの値を受け取る。

             #1. Array Index.

                  レジスタAは、Bに規定された配列の
                  レジスタCのオフセットにある値を受け取る。

             #2. Array Amendment.

                  Aに規定される配列は、レジスタBのオフセットにある
                  レジスタCの値で修正される。

             #3. Addition.

                  The register A receives the value in register B plus 
                  the value in register C, modulo 2^32.

             #4. Multiplication.

                  The register A receives the value in register B times
                  the value in register C, modulo 2^32.

             #5. Division.

                  The register A receives the value in register B
                  divided by the value in register C, if any, where
                  each quantity is treated treated as an unsigned 32
                  bit number.

             #6. Not-And.

                  Each bit in the register A receives the 1 bit if
                  either register B or register C has a 0 bit in that
                  position.  Otherwise the bit in register A receives
                  the 0 bit.

  Other Operators.
  ----------------

  The following instructions ignore some or all of the A, B and C
  registers.

           #7. Halt.

                  The universal machine stops computation.

           #8. Allocation.

                  A new array is created with a capacity of platters
                  commensurate to the value in the register C. This
                  new array is initialized entirely with platters
                  holding the value 0. A bit pattern not consisting of
                  exclusively the 0 bit, and that identifies no other
                  active allocated array, is placed in the B register.

           #9. Abandonment.

                  The array identified by the register C is abandoned.
                  Future allocations may then reuse that identifier.

          #10. Output.

                  The value in the register C is displayed on the console
                  immediately. Only values between and including 0 and 255
                  are allowed.

          #11. Input.

                  The universal machine waits for input on the console.
                  When input arrives, the register C is loaded with the
                  input, which must be between and including 0 and 255.
                  If the end of input has been signaled, then the 
                  register C is endowed with a uniform value pattern
                  where every place is pregnant with the 1 bit.

          #12. Load Program.

                  The array identified by the B register is duplicated
                  and the duplicate shall replace the '0' array,
                  regardless of size. The execution finger is placed
                  to indicate the platter of this array that is
                  described by the offset given in C, where the value
                  0 denotes the first platter, 1 the second, et
                  cetera.

                  The '0' array shall be the most sublime choice for
                  loading, and shall be handled with the utmost
                  velocity.

  Special Operators.
  ------------------

  One special operator does not describe registers in the same way.
  Instead the three bits immediately less significant than the four
  instruction indicator bits describe a single register A. The
  remainder twenty five bits indicate a value, which is loaded
  forthwith into the register A.

                   A  
                   |  
                   vvv
              .--------------------------------.
              |VUTSRQPONMLKJIHGFEDCBA9876543210|
              `--------------------------------'
               ^^^^   ^^^^^^^^^^^^^^^^^^^^^^^^^
               |      |
               |      value
               |
               operator number

               Figure 3. Special Operators

          #13. Orthography.

                  The value indicated is loaded into the register A
                  forthwith.

  コストダウンの目安
  ------------------

  As per our meeting on 13 Febtober 19106, certain "impossible
  behaviors" may be unimplemented in the furnished device. An
  exhaustive list of these Exceptions is given below. Our contractual
  agreement dictates that the machine may Fail under no other
  circumstances.


  If at the beginning of a cycle, the execution finger does not indicate
  a platter that describes a valid instruction, then the machine may Fail.

  If the program decides to index or amend an array that is not
  active, because it has not been allocated or it has been abandoned,
  or if the offset supplied for the access lies outside the array's
  capacity, then the machine may Fail.

  If the program decides to abandon the '0' array, or to abandon an array
  that is not active, then the machine may Fail.
  
  If the program sets out to divide by a value of 0, then the machine
  may Fail.

  If the program decides to load a program from an array that is not
  active, then the machine may Fail.

  If the program decides to Output a value that is larger than 255, the
  machine may Fail.

  If at the beginning of a machine cycle the execution finger aims
  outside the capacity of the 0 array, the machine may Fail.
