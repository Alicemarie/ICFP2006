
  発注建設                       Standard Sand of Pennsylvania Co.

  クライアント: 束縛変数教
  オブジェクト: UM-32 "Universal Machine"
  -----------------------------------------------------------------
                                                     19106年7月21日

  物理仕様
  --------

  マシンは次のようなコンポーネントによって構成されます:

    * 砂岩プラッタの無限供給。砂岩プラッタは「ビット」と呼ばれ
      る32個の小さなマークから成ります。

                               最少価値のビット
                                              |
                                              v
              .--------------------------------.
              |VUTSRQPONMLKJIHGFEDCBA9876543210|
              `--------------------------------'
               ^
               |
               最大価値のビット

              図 0. プラッタ
      
      各ビットはそれぞれ0ビットもしくは1ビットです。"unsigned
      32-bit numbers"（特許 #4,294,967,295 を参照）システムを使う
      ことで、プラッタの上のマーキングは数値に成り得ます。

    * 8つの区別される多目的レジスタがあり、それぞれひとつのプラッタ
      を保持することができる。

    * プラッタの配列のコレクションがあり、それぞれ区別される
      32-bit の識別子によって参照される。
    * A collection of arrays of platters, each referenced by a distinct
      32-bit identifier. One distinguished array is referenced by 0
      and stores the "program." This array will be referred to as the
      '0' array.

    * 「ASCII文字セット」（特許 #127 参照）の象形文字を表示可能かつ
      「unsigned 8-bit characters」（特許 #255 参照）による入力、
      出力の可能な 1x1 文字解像度コンソール。
  

  挙動
  ----

  マシンは「プログラム」スクロールから読み込まれたコンテンツを
  持つ '0' 配列によって初期化されます。レジスタはすべて '0' の
  値のプラッタによって初期化されます。実行指（†execution finer）
  は '0' 配列のオフセット0、すなわち最初のプラッタを指しています。

  レガシーな "unsigned 8-bit character" スクロールからプログラムが
  渡されると、A,B,C,Dの組み合わせのバイトが、'A'なら最大格、'D'なら
  最少格、'B'と'C'はそれぞれ中大格、中少格として解釈されます。

  一度初期化されてしまうと、マシンはスピンサイクルに入ります。
  Unversal Machineにおいては、各サイクルは実行指の指すプラッタから
  「オペレータ」を受け取ります。以下のセクションでは、そこで
  受け取ることになるであろうオペレータを記述します。この
  オペレータが解釈されないと、実行指は必要に応じて次のプラッタへ
  動作を移します。

  オペレータ
  ----------

  Unversal Machineには14のオペレータがあります。オペレータの
  ナンバーは通達されたプラッタの最大価値4ビットにより規定されます。

              .--------------------------------.
              |VUTSRQPONMLKJIHGFEDCBA9876543210|
              `--------------------------------'
               ^^^^
               |
               オペレータのナンバー

              図 1. オペレータの概要


  標準オペレータ
  --------------

  各標準オペレータは、A,B,Cの3つのレジスタを使うことで動作を
  可能にします。各レジスタは通達されたプラッタの3ビット
  によって規定されます。レジスタCは最少価値の3ビット、レジスタ
  Bは次に価値の少ない3ビット、レジスタAは次に価値の少ない3ビット
  です。

                                      A     C
                                      |     |
                                      vvv   vvv                    
              .--------------------------------.
              |VUTSRQPONMLKJIHGFEDCBA9876543210|
              `--------------------------------'
               ^^^^                      ^^^
               |                         |
               オペレータのナンバー      B

              図 2. 標準オペレータ


  各ベーシックオペレータの概要は以下の通りです。

  オペレータ #0. Conditional Move.

                  レジスタCが0でなければ
                  レジスタAはレジスタBの値を受け取る。

             #1. Array Index.

                  レジスタAは、配列Bが識別できれば
                  レジスタCのオフセットにある値を受け取る。

             #2. Array Amendment.

                  Aに規定される配列は、レジスタBのオフセットにある
                  レジスタCの値で修正される。

             #3. Addition.

                  レジスタAはレジスタBとレジスタCを加算した値を受け取る。
                  これは2の32乗の範囲内である。

             #4. Multiplication.

                  レジスタAはレジスタBとレジスタCを乗算した値を受け取る。
                  これは2の32乗の範囲内である。

             #5. Division.

                  レジスタAはレジスタBをレジスタC（必要ならば unsigned
                  32 bitの値としてみなす）で除算した値を受け取る。

             #6. Not-And.

                  レジスタBもしくはレジスタCが0ビットならば、レジスタA
                  の各ビットが1となる。でなければ、レジスタAは0ビット
                  になる。

  他のオペレータ
  --------------

  以下の命令はレジスタA、B、Cのいずれか、もしくはすべてを無視
  します。

           #7. Halt.

                  Universal Machine の稼動がストップする。

           #8. Allocation.

                  レジスタCの値の示すプラッタと同容量の配列が作成され
                  る。この新たな配列のビットはすべて0で初期化される。
                  ビットパターンは0ビット以外のもので構成されていては
                  ならず、他にアロケートされたアクティブな配列を参照
                  せず、Bレジスタに配置される。

           #9. Abandonment.

                  レジスタCの参照する配列が破棄される。この参照は
                  将来的にアロケートされ、再利用される可能性がある。

          #10. Output.

                  レジスタCの値がコンソールに即座に表示される。0から255の
                  間の値のみ。

          #11. Input.

                  Universal Machineはコンソールからの入力を待つ。入力を
                  検知すると、レジスタCにその値がロードされる。値は0から
                  255の間でなければならない。入力完了の信号を受け取ると、
                  レジスタCはすべて1ビットになった均一な値のパターンを
                  受け取る。

          #12. Load Program.

                  Bレジスタから参照される配列はサイズに関わらず複製され、
                  その複製は '0' 配列に置き換えられる。実行指はこの
                  配列から、レジスタCのオフセット（0なら最初のプラッタ、
                  1ならその次、など）を示すようになる。

                  '0' 配列はロードに際してもっとも崇高なものとなり、
                  最大限の優先度をもって扱われる。

  特殊オペレータ
  --------------

  ある特殊なオペレータは、これまでのようなレジスタの表現方法ではあり
  ません。命令を表す4ビットよりも価値の低い、先頭の3ビットが代わりに
  単一のレジスタAを表現します。残りの25ビットは直ちにレジスタAにロー
  ドされる値を表しています。

                   A  
                   |  
                   vvv
              .--------------------------------.
              |VUTSRQPONMLKJIHGFEDCBA9876543210|
              `--------------------------------'
               ^^^^   ^^^^^^^^^^^^^^^^^^^^^^^^^
               |      |
               |      値
               |
               オペレータ番号

               図 3. 特殊オペレータ

          #13. Orthography.

                  指定された値が即座にレジスタAへロードされる。

  コストダウンの尺度
  ------------------

  As per our meeting on 13 Febtober 19106, certain "impossible
  behaviors" may be unimplemented in the furnished device. An
  exhaustive list of these Exceptions is given below. Our contractual
  agreement dictates that the machine may Fail under no other
  circumstances.


  If at the beginning of a cycle, the execution finger does not indicate
  a platter that describes a valid instruction, then the machine may Fail.

  If the program decides to index or amend an array that is not
  active, because it has not been allocated or it has been abandoned,
  or if the offset supplied for the access lies outside the array's
  capacity, then the machine may Fail.

  If the program decides to abandon the '0' array, or to abandon an array
  that is not active, then the machine may Fail.
  
  If the program sets out to divide by a value of 0, then the machine
  may Fail.

  If the program decides to load a program from an array that is not
  active, then the machine may Fail.

  If the program decides to Output a value that is larger than 255, the
  machine may Fail.

  If at the beginning of a machine cycle the execution finger aims
  outside the capacity of the 0 array, the machine may Fail.
